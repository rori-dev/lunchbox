// -------------------
//   Abhängigkeiten der Applikation
// -------------------
ext.springBootVersion = '2.1.3.RELEASE'

repositories { mavenCentral() }
dependencies {
  // Spring Boot BOM
  implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))

  // kotlin
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

  // web
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation('org.springframework.boot:spring-boot-starter-undertow') { exclude module: 'undertow-websockets-jsr' }
  implementation 'org.jboss.xnio:xnio-nio:3.6.5.Final' // Undertow nutzt eigentlich XNIO 3.3, was den Worker-ThreadPool maximal aufbläht (vgl. ConfigUndertow.java)
  implementation 'javax.xml.bind:jaxb-api'

  // html/xml
  implementation 'org.jsoup:jsoup:1.11.3'
  implementation 'org.joda:joda-money:1.0.1'

  // security
  //  implementation 'org.springframework.boot:spring-boot-starter-security'
  //  implementation 'org.springframework.security:spring-security-oauth2-resource-server'
  //  implementation 'org.springframework.security:spring-security-oauth2-jose'

  // persistence
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  //  implementation 'org.liquibase:liquibase-core'
  //  runtime 'org.postgresql:postgresql:42.2.5'
  runtime 'com.h2database:h2'

  // logging
  //  runtime 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

  // Test-Abhängigkeiten sind in test.gradle definiert
}

// wir nutzen den resourcenschonenden Undertow statt Tomcat
configurations.all { exclude module: 'spring-boot-starter-tomcat' }
