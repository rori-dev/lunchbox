image: openjdk:8

variables:
  DOCKER_REGISTRY_ADDR: docker.rori.dev
  DOCKER_REGISTRY_USER: deploy
  DOCKER_REGISTRY_TOKEN: $DOCKER_REGISTRY_TOKEN # wird von Gitlab hereingereicht

# Cachen der Dependencies
# - Der Cache beschleunigt den CI-Lauf durch Vorhalten von Dependencies & anderen Downloads.
# - key: ${CI_COMMIT_REF_SLUG} cacht für alle CI-Läufe eines Branches, 'any-key' cacht für alle CI-Läufe eines Projekts
# - Jobs des selben CI-Laufs tauschen ihre Resultate via 'artifacts' aus, nicht per Caching!
# - ACHTUNG: Das Caching greift nicht zwingend! Jeder Job muss darauf gefasst sein, den Cache neu aufzubauen!
# - Doku siehe https://docs.gitlab.com/ee/ci/caching/
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .gradle/wrapper
    - .gradle/caches
  policy: pull

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - export GRADLE_OPTS="-Dorg.gradle.daemon=false -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false"

stages:
  - build
  - test
  - docker
  - deploy

build:
  stage: build
  script:
    - ./gradlew assemble
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .gradle/wrapper
      - .gradle/caches
    policy: pull-push
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 hour

lint:
  stage: test
  script:
    - ./gradlew formatCheck
    - ./gradlew codeAnalyse
  artifacts:
    paths:
      - build/reports/detekt/*
    when: always
    expire_in: 1 week

unit:
  stage: test
  script:
    - ./gradlew test
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml
    paths:
      - build/test-results/test/TEST-*.xml
    when: always
    expire_in: 1 week

integration:
  stage: test
  services:
    - docker:dind # Notwendig für Volume-Mounts in TestContainers -> https://www.testcontainers.org/supported_docker_environment/continuous_integration/gitlab_ci/
  variables:
    DOCKER_HOST: 'tcp://docker:2375'
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - ./gradlew testIntegration
  artifacts:
    reports:
      junit: build/test-results/testIntegration/TEST-*.xml
    paths:
      - build/test-results/testIntegration/TEST-*.xml
    when: always
    expire_in: 1 week

docker:
  stage: docker
  image: $DOCKER_REGISTRY_ADDR/docker-openjdk8
  services:
    - docker:dind # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-workflow-with-docker-executor
  variables:
    DOCKER_HOST: 'tcp://docker:2375'
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  only:
    - master
  script:
    - echo "$DOCKER_REGISTRY_TOKEN" | docker login -u $DOCKER_REGISTRY_USER --password-stdin $DOCKER_REGISTRY_ADDR
    - ./gradlew docker dockerTag dockerPush --exclude-task build

deploy:
  stage: deploy
  image: appropriate/curl
  only:
    - master
  script:
    - curl --request POST --form "token=${CI_DEPLOY_TOKEN}" --form ref=master https://git.rori.dev/api/v4/projects/42/trigger/pipeline
